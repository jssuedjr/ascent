{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red71\green138\blue206;
}
{\*\expandedcolortbl;;\cssrgb\c0\c1\c1;\cssrgb\c100000\c100000\c99985\c0;\cssrgb\c34146\c61677\c84338;
}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
Each component of the CEK machine should be a struct\
And there should be a relation to be able to index from each struct\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardeftab720\pardirnatural\partightenfactor0

\f1\fs24 \cf0 \cb1 \kerning1\expnd0\expndtw0 Figure 5:\
\
What improvements are made compared to the previous concrete (abstract) machines?\
\
What makes this machine abstracted from the concrete variants? \
\
What does the transition function tell us? \
\
How do the new tick and alloc functions work? \
\
\
\pard\pardeftab720\sa240\partightenfactor0

\f0 \cf0 \expnd0\expndtw0\kerning0
so in Rust, enums and match work together and struct and impl also work in conjunction.\
Box<T> works for recursive enum definitions\
\
\pard\pardeftab720\partightenfactor0
\cf0 \
Step 1: define environments and other components that need to be defined \
Step 2: create a type predicate \
Step 3: define eval function using Ascent \
Step 4: define main function that outputs a set of reachable states based on a given input }